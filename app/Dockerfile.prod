###########
# BUILDER #
###########

# pull official base image
FROM python:3.11.4-slim-buster AS builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc

# lint
RUN pip install --upgrade pip
RUN pip install flake8==6.0.0
COPY . /usr/src/app/
RUN flake8 --ignore=E501,F401 .

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.11.4-slim-buster

# create directory for the app user & create the app user
RUN mkdir -p /main/app && addgroup --system app && adduser --system --group app

# create the appropriate directories
ENV main=/main/app
ENV APP_main=/main/app/web
RUN mkdir "$APP_main" "$APP_main/staticfiles" "$APP_main/mediafiles"
WORKDIR $APP_main

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat && apt-get clean
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip && pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  "$APP_main/entrypoint.prod.sh" && chmod +x  "$APP_main/entrypoint.prod.sh"

# copy project
COPY . $APP_main

# chown all the files to the app user
RUN chown -R app:app "$APP_main"

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/main/app/web/entrypoint.prod.sh"]
